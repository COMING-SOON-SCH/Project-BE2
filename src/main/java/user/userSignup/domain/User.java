package Soon.Coming.springbootdeveloper.userSignup.domain;

import lombok.AllArgsConstructor;
import lombok.Getter;
import lombok.NoArgsConstructor;

import jakarta.persistence.*; // JPA ê´???? ??´ë?¸í????´ì????? ?????????
import org.springframework.security.core.GrantedAuthority;
import org.springframework.security.core.authority.SimpleGrantedAuthority;
import org.springframework.security.core.userdetails.UserDetails;

import java.util.Collection;
import java.util.List;


@Getter
@NoArgsConstructor
@AllArgsConstructor
@Entity // JPA ?????°í?°ë?? ì§????
public class User implements UserDetails {

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "user_id")
    private Long userId;

    @Column(nullable = false, unique = true)
    private String username;

    @Column(nullable = false)
    private String password;

    /*@Column(nullable = false)
    private String name;
    */

    // ê¶???? ë°????
    @Override
    public Collection<? extends GrantedAuthority> getAuthorities() {
        return List.of(new SimpleGrantedAuthority("user"));
    }

    // ???????????? username ë°???? (ê³??????? ê°?)
    @Override
    public String getUsername() {
        return username;
    }

    // ???????????? ë¹?ë°?ë²???? ë°????
    @Override
    public String getPassword() {
        return password;
    }

    // ê³???? ë§?ë£? ???ë¶? ë°????
    @Override
    public boolean isAccountNonExpired() {
        return true; // true -> ë§?ë£????ì§? ??????
    }

    // ê³???? ???ê¸? ???ë¶? ë°????
    @Override
    public boolean isAccountNonLocked() {
        return true; // true -> ???ê¸????ì§? ??????
    }

    // ?????¤ì????? ë§?ë£? ???ë¶? ë°????
    @Override
    public boolean isCredentialsNonExpired() {
        return true; // true -> ë§?ë£????ì§? ??????
    }

    // ê³???? ?????? ê°???? ???ë¶? ë°????
    @Override
    public boolean isEnabled() {
        return true; // true -> ?????? ê°????
    }
}